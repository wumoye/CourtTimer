name: Release (Android)

on:
  push:
    tags:
      - "v*"

permissions:
  contents: write

env:
  # 可选：Flutter channel 和版本
  FLUTTER_CHANNEL: stable
  # 若 tag 为 v1.2.3 或 v1.2.3+4，将解析为下方两个变量
  BUILD_NAME: ${{ github.ref_name }}

jobs:
  derive-version:
    name: Derive Version
    runs-on: ubuntu-latest
    outputs:
      build_name: ${{ steps.vers.outputs.build_name }}
      build_number: ${{ steps.vers.outputs.build_number }}
    steps:
      - name: Parse tag to build name/number
        id: vers
        shell: bash
        run: |
          TAG="${GITHUB_REF_NAME#v}"
          if [[ "$TAG" == *+* ]]; then
            BUILD_NAME="${TAG%%+*}"
            BUILD_NUMBER="${TAG##*+}"
          else
            BUILD_NAME="$TAG"
            BUILD_NUMBER="${GITHUB_RUN_NUMBER}"
          fi
          echo "build_name=$BUILD_NAME" >> $GITHUB_OUTPUT
          echo "build_number=$BUILD_NUMBER" >> $GITHUB_OUTPUT

  build-android:
    name: Build Android
    needs: derive-version
    runs-on: ubuntu-latest
    env:
      ANDROID_KEYSTORE_BASE64: ${{ secrets.ANDROID_KEYSTORE_BASE64 }}
      ANDROID_KEYSTORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
      ANDROID_KEY_ALIAS: ${{ secrets.ANDROID_KEY_ALIAS }}
      ANDROID_KEY_ALIAS_PASSWORD: ${{ secrets.ANDROID_KEY_ALIAS_PASSWORD }}
    steps:
      - uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: ${{ env.FLUTTER_CHANNEL }}
          cache: true

      - name: Flutter pub get
        run: flutter pub get

      - name: Generate launcher icons (if icon exists)
        shell: bash
        run: |
          if [ -f assets/icon/icon.png ]; then
            dart run flutter_launcher_icons
          else
            echo "assets/icon/icon.png not found, skip icon generation."
          fi

      - name: Flutter test
        run: flutter test --no-pub

      - name: Configure Android keystore (optional)
        if: ${{ env.ANDROID_KEYSTORE_BASE64 != '' }}
        shell: bash
        run: |
          mkdir -p android
          echo "$ANDROID_KEYSTORE_BASE64" | base64 -d > android/release.keystore
          cat > android/key.properties <<EOF
          storePassword=$ANDROID_KEYSTORE_PASSWORD
          keyPassword=$ANDROID_KEY_ALIAS_PASSWORD
          keyAlias=$ANDROID_KEY_ALIAS
          # 注意：Gradle 在 app 模块解析相对路径，这里用 ../ 指向 android/ 目录
          storeFile=../release.keystore
          EOF

      - name: Build Android APK (universal)
        run: |
          flutter build apk \
            --release \
            --build-name "${{ needs.derive-version.outputs.build_name }}" \
            --build-number "${{ needs.derive-version.outputs.build_number }}"

      - name: Build Android APKs (split per ABI)
        run: |
          flutter build apk \
            --release \
            --split-per-abi \
            --build-name "${{ needs.derive-version.outputs.build_name }}" \
            --build-number "${{ needs.derive-version.outputs.build_number }}"

      - name: Upload artifacts (Android)
        uses: actions/upload-artifact@v4
        with:
          name: android
          path: |
            build/app/outputs/flutter-apk/app-release.apk
            build/app/outputs/flutter-apk/app-armeabi-v7a-release.apk
            build/app/outputs/flutter-apk/app-arm64-v8a-release.apk
            build/app/outputs/flutter-apk/app-x86_64-release.apk

  release:
    name: Create GitHub Release
    needs:
      - build-android
    runs-on: ubuntu-latest
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist

      - name: List artifacts
        run: |
          ls -R dist

      - name: Create Release and upload assets
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: ${{ github.ref_name }}
          draft: false
          prerelease: false
          files: |
            dist/**/**
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
